{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/about/about.component.html","/./src/app/app.component.html","/./src/app/login/login.component.html","/./src/app/main-display/main-display.component.html","/./src/app/register/register.component.html","/./src/app/view-tourney/view-tourney.component.html","/./src/app/about/about.component.css","/./src/app/about/about.component.ts","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/data.service.ts","/./src/app/login.service.ts","/./src/app/login/login.component.css","/./src/app/login/login.component.ts","/./src/app/main-display/main-display.component.css","/./src/app/main-display/main-display.component.ts","/./src/app/register/register.component.css","/./src/app/register/register.component.ts","/./src/app/view-tourney/view-tourney.component.css","/./src/app/view-tourney/view-tourney.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<p>This website is brought to you by Organization 13.<br><br>\\n\\n    Team members:<br><br>\\n\\n    - Logan Willis (Angular)<br>\\n    - Syed Newaz (Testing, Backend)<br>\\n    - Darion Toney (Backend)<br><br>\\n\\n    Reality can be whatever we want.\\n</p>\\n\"","module.exports = \"<head>\\n  <!-- Bootstrap and materialize stuff -->\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\\"\\n    integrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\" crossorigin=\\\"anonymous\\\">\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\\\">\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\\\"></script>\\n</head>\\n\\n<header>\\n  <div style=\\\"text-align:center\\\">\\n    <span>\\n      <h1>\\n        <div style=\\\"height:50px\\\">\\n          <img src=\\\"https://upload.wikimedia.org/wikipedia/en/8/86/Ike_SSBU.png\\\" id=\\\"headerimage\\\">\\n        </div>\\n        <b>⚔<i>AETHER.GG</i></b>\\n      </h1>\\n      <h5>A site by Organization</h5>\\n    </span>\\n  </div>\\n</header>\\n\\n<nav class=\\\"navbar bg-custom navbar-expand-sm\\\" id=\\\"mainnav\\\">\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">/login</a>\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/main-display\\\">/main-display</a>\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/about\\\">/about</a>\\n  </ul>\\n</nav>\\n\\n\\n<div id=\\\"mainbody\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<footer>\\n  Site by Organization 13 | Powered by Angular | 2019\\n</footer>\"","module.exports = \"<script>\\n    $(document).ready(function(){\\n   var $form = $('form');\\n   $form.submit(function(){\\n      $.post($(this).attr('action'), $(this).serialize(), function(response){\\n            // do something here on success\\n      },'json');\\n      return false;\\n   });\\n});\\n    </script>\\n\\n<h3>Please enter your login information below.</h3><br>\\n\\n\\n<form action=\\\"http://34.239.48.216:8085/MavenProjectPipeline/aether/login\\\" method=\\\"POST\\\" id=\\\"mainform\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\"></div>\\n            <div class=\\\"col-4\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"username\\\"><br>\\n                <label for=\\\"password\\\">Password</label>\\n                <input class=\\\"textinput\\\" type=\\\"password\\\" name=\\\"password\\\" style=\\\"margin-bottom: 20px;\\\"><br>\\n                <input id=\\\"submitbutton\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n            </div>\\n            <div class=\\\"col-4\\\"></div>\\n        </div>\\n    </div>\\n</form>\\n\\n<label>Don't have an account? Click <a routerLink='/register'>here</a> to register!</label>\\n\\n\\n<!--\\n    <h2>Login</h2>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n            Login\\n        </button>\\n        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Register</a>\\n    </div>\\n</form>\\n-->\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-8\\\">\\n            <h3>Tournaments</h3>\\n            <div *ngFor='let tournament of tournaments$'>\\n                <h5>\\n                    <img\\n                        src=\\\"https://secure.gravatar.com/avatar/6d9fc4cfb129f85377fbe756de639d0a?r=r&s=40&d=https://s3.amazonaws.com/challonge_app/misc/challonge_fireball_gray.png\\\">\\n                    {{tournament.tournament.name}} - {{tournament.tournament.participants_count}} entrants -\\n                    <span *ngIf=\\\"tournament.tournament.completed_at == null\\\">\\n                        In Progress\\n                    </span>\\n                    <span *ngIf=\\\"tournament.tournament.completed_at != null\\\">\\n                        Completed\\n                    </span>\\n                    <a routerLink=\\\"/view-tourney/{{tournament.tournament.url}}\\\"><button>View</button></a>\\n                </h5>\\n            </div>\\n        </div>\\n        <div class=\\\"col-4\\\" id=\\\"rankings\\\">\\n            <h3>Rankings</h3>\\n            <table>\\n                <tr>\\n                    <th>Rank</th>\\n                    <th>Name</th>\\n                    <th>Wins</th>\\n                </tr>\\n                <tr>\\n                    <td>1</td>\\n                    <td>Some Guy</td>\\n                    <td>1</td>\\n                </tr>\\n                <tr>\\n                    <td>2</td>\\n                    <td>Some Dude</td>\\n                    <td>0</td>\\n                </tr>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n<!--\\n<h3>Users (Test)</h3>\\n<div *ngFor='let user of users$'>\\n    <h4>{{user.name}}</h4>\\n</div>\\n-->\"","module.exports = \"<h3>Register Account</h3>\\n\\n<form action=\\\"http://34.239.48.216:8085/MavenProjectPipeline/aether/registration\\\" method=\\\"POST\\\" id=\\\"mainform\\\" enctype=\\\"application/json\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-3\\\"></div>\\n            <div class=\\\"col-6\\\">\\n                <label for=\\\"username\\\">Enter a username:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"username\\\"><br>\\n\\n                <label for=\\\"password\\\">Enter a password:</label>\\n                <input class=\\\"textinput\\\" type=\\\"password\\\" name=\\\"password\\\"><br>\\n\\n                <label for=\\\"first_name\\\">First name:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"first_name\\\"><br>\\n\\n                <label for=\\\"last_name\\\">Last name:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"last_name\\\"><br>\\n\\n                <label for=\\\"region\\\">Region:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"region\\\"><br>\\n\\n                <label for=\\\"phrase\\\">Enter a fun phrase:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"phrase\\\"><br>\\n\\n                <label for=\\\"users_role\\\">What type of account would you like?</label><br>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"users_role\\\"><br>\\n\\n                <input id=\\\"submitbutton\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n            </div>\\n            <div class=\\\"col-3\\\"></div>\\n        </div>\\n    </div>\\n</form>\\n\\n<form action=\\\"http://localhost:8080/MavenProjectPipeline/aether/registration\\\" method=\\\"POST\\\" id=\\\"mainform\\\" enctype=\\\"application/json\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-3\\\"></div>\\n            <div class=\\\"col-6\\\">\\n                <label for=\\\"username\\\">Enter a username:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"username\\\"><br>\\n\\n                <label for=\\\"password\\\">Enter a password:</label>\\n                <input class=\\\"textinput\\\" type=\\\"password\\\" name=\\\"password\\\"><br>\\n\\n                <label for=\\\"first_name\\\">First name:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"first_name\\\"><br>\\n\\n                <label for=\\\"last_name\\\">Last name:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"last_name\\\"><br>\\n\\n                <label for=\\\"region\\\">Region:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"region\\\"><br>\\n\\n                <label for=\\\"phrase\\\">Enter a fun phrase:</label>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"phrase\\\"><br>\\n\\n                <label for=\\\"users_role\\\">What type of account would you like?</label><br>\\n                <input class=\\\"textinput\\\" type=\\\"text\\\" name=\\\"users_role\\\"><br>\\n\\n                <input id=\\\"submitbutton\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n            </div>\\n            <div class=\\\"col-3\\\"></div>\\n        </div>\\n    </div>\\n</form>\"","module.exports = \"<h3 *ngIf=\\\"tournamentName == undefined\\\">Loading...</h3>\\n<h3>{{tournamentName}}</h3>\\n\\n<span>\\n    <h4 style=\\\"display:inline-block\\\">Bracket</h4>\\n    <a style=\\\"float:right;margin-top:20px\\\" href=\\\"https://challonge.com/{{id}}\\\" target=\\\"_blank\\\"><button>Open Challonge</button></a>\\n</span>\\n\\n<iframe [src]=completeURL width=\\\"100%\\\" height=\\\"500\\\" frameborder=\\\"0\\\" scrolling=\\\"auto\\\" allowtransparency=\\\"true\\\"></iframe>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { MainDisplayComponent } from './main-display/main-display.component';\nimport { AboutComponent } from './about/about.component';\nimport { ViewTourneyComponent } from './view-tourney/view-tourney.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo: '/login',pathMatch:'full'},\n  {path:'login',component:LoginComponent},\n  {path:'main-display',component:MainDisplayComponent},\n  {path:'about',component:AboutComponent},\n  {path:'view-tourney/:id',component:ViewTourneyComponent},\n  {path:'register',component:RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\nimport { User } from './user.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n\n  \n\n  title = 'Project2v2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//import{ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainDisplayComponent } from './main-display/main-display.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DataService } from './data.service';\nimport { AboutComponent } from './about/about.component';\nimport { ViewTourneyComponent } from './view-tourney/view-tourney.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainDisplayComponent,\n    AboutComponent,\n    ViewTourneyComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    //ReactiveFormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport { User } from './user.model';\nimport { Tournament } from './tournament.model';\nimport {NgForm} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  //\n  apiUrl = 'https://jsonplaceholder.typicode.com/users';\n\n  //tournamentsIndexURL = 'https://api.challonge.com/v1/tournaments.json?api_key=XOrxEi0Ml0MTpeKmB3ddlRfgHgAbGfc8kvHAtW0Y';\n  tournamentsIndexURL = 'https://TheRealMrWillis:XOrxEi0Ml0MTpeKmB3ddlRfgHgAbGfc8kvHAtW0Y@api.challonge.com/v1/tournaments.json';\n  //tournamentsIndexURL = 'https://api.challonge.com/v1/tournaments.json';\n\n  loginURL = 'http://34.239.48.216:8085/MavenProjectPipeline/aether/login';\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  /*\n  getUsers(){\n    return this.httpClient.get<User[]>(this.apiUrl);\n  }\n  */\n\n  getTournamentsIndex(){\n    \n    console.log(\"attempting data.service.ts return\");\n    console.log(this.httpClient.get(this.tournamentsIndexURL));\n    return this.httpClient.get<Tournament[]>(this.tournamentsIndexURL);\n    //return this.httpClient.get<Object[]>(this.tournamentsIndexURL);\n  }\n\n  doLogin(username:string,password:string){\n    //let httpParams = [username,password];\n    //return this.httpClient.post(this.loginURL,httpParams);\n    let formData:FormData = new FormData();\n    formData.append('username',username);\n    formData.append('password',password);\n    return this.httpClient.post(this.loginURL,formData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { User } from './user.model';\nimport { Tournament } from './tournament.model';\nimport { NgForm } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  loginURL = 'http://34.239.48.216:8085/MavenProjectPipeline/aether/login';\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private httpClient: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  doLogin(username: string, password: string) {\n    //let httpParams = [username,password];\n    //return this.httpClient.post(this.loginURL,httpParams);\n\n    /*\n    let formData:FormData = new FormData();\n    formData.append('username',username);\n    formData.append('password',password);\n    return this.httpClient.post(this.loginURL,formData);\n    */\n\n    return this.httpClient.post<any>(this.loginURL, { username, password })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n}","module.exports = \"label{\\n    display:block;\\n    text-align:center !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYiw0QkFBNEI7QUFDaEMiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWx7XG4gICAgZGlzcGxheTpibG9jaztcbiAgICB0ZXh0LWFsaWduOmNlbnRlciAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport{FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\nimport { User } from '../user.model';\nimport { LoginService } from '../login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  //loginForm: FormGroup;\n  username:string;\n  password:string;\n  currUser:User;\n  userObject:Object;\n\n  constructor(\n    private loginService : LoginService\n    //private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    /*\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n  });*/\n  }\n\n  //get f() { return this.loginForm.controls; }\n\n  /*\n  onSubmit(){\n    this.username = this.f.username.value;\n    this.password = this.f.password.value;\n    console.log(\"Username: \"+this.username);\n    console.log(\"Password: \"+this.password);\n    this.doLogin(this.username,this.password);\n  }*/\n\n  doLogin(username:string,password:string){\n    return this.loginService.doLogin(username,password).subscribe(data => this.userObject = data);\n  }\n\n}\n","module.exports = \"h5{\\n    text-align: center;\\n}\\n\\nimg{\\n    width:30px;\\n    height:30px;\\n}\\n\\n#rankings{\\n    border-radius:10px;\\n    background-color: rgb(90, 90, 90);\\n}\\n\\ntable{\\n    text-align:center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1kaXNwbGF5L21haW4tZGlzcGxheS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9tYWluLWRpc3BsYXkvbWFpbi1kaXNwbGF5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoNXtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmltZ3tcbiAgICB3aWR0aDozMHB4O1xuICAgIGhlaWdodDozMHB4O1xufVxuXG4jcmFua2luZ3N7XG4gICAgYm9yZGVyLXJhZGl1czoxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig5MCwgOTAsIDkwKTtcbn1cblxudGFibGV7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user.model';\nimport { DataService } from '../data.service';\nimport { Tournament } from '../tournament.model';\n\n@Component({\n  selector: 'app-main-display',\n  templateUrl: './main-display.component.html',\n  styleUrls: ['./main-display.component.css']\n})\nexport class MainDisplayComponent implements OnInit {\n\n  users$: User[];\n  tournaments$: Tournament[];\n  tournamentComplete: string[] = [];\n  tournamentArray: string;\n\n  constructor(private dataService: DataService){}\n\n  ngOnInit(){\n    //this.getUsers();\n    this.getTournamentsIndex();\n    console.log(\"user$: \"+this.users$);\n    console.log(\"tournaments$: \"+this.tournaments$);\n    return;\n  }\n\n  ngAfterViewChecked(){\n    console.log(\"ngAfterViewChecked invoked\");\n    this.tournamentArray = JSON.stringify(this.tournaments$);\n    console.log(this.tournaments$[0]);\n    for (let i=0;i<this.tournaments$.length;i++){\n      if (this.tournaments$[i].tournament.completed_at == null){\n        this.tournamentComplete[i] = \"In Progress\";\n      }\n      else{\n        this.tournamentComplete[i] = \"Complete\";\n      }\n      \n      console.log(this.tournamentComplete[i]);\n    }\n    console.log(this.tournamentComplete);\n  }\n\n  /*\n  getUsers(){\n    return this.dataService.getUsers().subscribe(data => this.users$ = data);\n  }\n  */\n\n  getTournamentsIndex(){\n    return this.dataService.getTournamentsIndex().subscribe(data => this.tournaments$ = data);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"button{\\n    font-size: 20px;\\n    padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlldy10b3VybmV5L3ZpZXctdG91cm5leS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC92aWV3LXRvdXJuZXkvdmlldy10b3VybmV5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataService } from '../data.service';\nimport { Tournament } from '../tournament.model';\n\n@Component({\n  selector: 'app-view-tourney',\n  templateUrl: './view-tourney.component.html',\n  styleUrls: ['./view-tourney.component.css']\n})\nexport class ViewTourneyComponent implements OnInit {\n  route: any;\n\n  tournaments$: Tournament[];\n  id: string;\n  completeURL: SafeResourceUrl;\n  tournamentIndex: number;\n  tournamentName: string;\n\n  constructor(private router: Router, private sanitizer: DomSanitizer, private dataService: DataService) { }\n\n  ngOnInit() {\n    // Grabs the URL id and sets up the resource URL for challonge embed\n    this.id = this.router.url.slice(14);\n    this.completeURL = this.sanitizer.bypassSecurityTrustResourceUrl(\"https://challonge.com/\" + this.id + \"/module\");\n    console.log(\"The Id is: \" + this.id);\n\n    // Populates tournaments$ so info can be grabbed in ngDoCheck()\n    this.getTournamentsIndex();\n  }\n\n  ngDoCheck() {\n    // Sets an index and name for the currently selected tournament\n    // after tournaments$ is populated\n    if (this.tournaments$ != undefined) {\n      for (let i = 0; i < this.tournaments$.length; i++) {\n        if (this.tournaments$[i].tournament.url == this.id) {\n          this.tournamentIndex = i;\n        }\n      }\n      console.log(this.tournamentIndex);\n      this.tournamentName = this.tournaments$[this.tournamentIndex].tournament.name;\n      console.log(this.tournamentName);\n    }\n  }\n\n  getTournamentsIndex() {\n    return this.dataService.getTournamentsIndex().subscribe(data => this.tournaments$ = data);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}